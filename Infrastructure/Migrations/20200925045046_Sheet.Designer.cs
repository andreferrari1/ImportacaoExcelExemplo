// <auto-generated />
using System;
using Infrastructure.DBConfiguration.EFCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20200925045046_Sheet")]
    partial class Sheet
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Domain.Entities.File", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("Dados");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("File");
                });

            modelBuilder.Entity("Domain.Entities.Sheet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AnoFabricacao");

                    b.Property<int>("AnoModelo");

                    b.Property<string>("BloqueiaEdicao");

                    b.Property<string>("CodigoFabrica");

                    b.Property<string>("CodigoModelo");

                    b.Property<string>("CodigoServico");

                    b.Property<string>("Combustivel");

                    b.Property<string>("DescricaoOS");

                    b.Property<string>("Diag0600");

                    b.Property<string>("MdeloVeiculo");

                    b.Property<string>("NomePacote");

                    b.Property<string>("Pecas");

                    b.Property<decimal>("PrecoMO")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PrecoPecas")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("QuantidadePeca")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Revisao");

                    b.Property<decimal>("TempoDuoTec")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TempoREPARO")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Unidade");

                    b.HasKey("Id");

                    b.ToTable("Sheet");
                });

            modelBuilder.Entity("Domain.Entities.TaskToDo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DeadLine");

                    b.Property<DateTime>("Start");

                    b.Property<bool>("Status");

                    b.Property<string>("Title");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("TaskToDo");
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Domain.Entities.TaskToDo", b =>
                {
                    b.HasOne("Domain.Entities.User", "User")
                        .WithMany("TasksToDo")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
